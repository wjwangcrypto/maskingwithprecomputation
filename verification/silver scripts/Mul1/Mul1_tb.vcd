$date
	Tue Sep 20 15:50:03 2022
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module Mul1_tb $end
$var wire 2 ! z [1:0] $end
$var reg 1 " clk $end
$var reg 1 # r1 $end
$var reg 2 $ x [1:0] $end
$var reg 2 % y [1:0] $end
$scope module u_Mul1 $end
$var wire 1 " clk $end
$var wire 1 & const $end
$var wire 1 # r1 $end
$var wire 2 ' x [1:0] $end
$var wire 2 ( y [1:0] $end
$var wire 1 ) z_2_1 $end
$var wire 2 * z [1:0] $end
$var wire 1 + u_1 $end
$var wire 1 , temp_4 $end
$var wire 1 - temp_3 $end
$var wire 1 . temp_2 $end
$var wire 1 / temp_1 $end
$var wire 1 0 t_1_2 $end
$var wire 1 1 t_1_1 $end
$var wire 1 2 t_1 $end
$var wire 1 3 s_1_2 $end
$var wire 1 4 s_1_1 $end
$var wire 1 5 s_1 $end
$var wire 1 6 r_1_1 $end
$scope module u10_XOR $end
$var wire 1 2 Y $end
$var wire 1 , B $end
$var wire 1 0 A $end
$upscope $end
$scope module u11_XOR $end
$var wire 1 2 B $end
$var wire 1 7 Y $end
$var wire 1 ) A $end
$upscope $end
$scope module u1_AND $end
$var wire 1 8 B $end
$var wire 1 3 Y $end
$var wire 1 4 A $end
$upscope $end
$scope module u2_AND $end
$var wire 1 . Y $end
$var wire 1 6 B $end
$var wire 1 / A $end
$upscope $end
$scope module u2_BUF $end
$var wire 1 # A $end
$var wire 1 9 Y $end
$upscope $end
$scope module u3_AND $end
$var wire 1 : B $end
$var wire 1 0 Y $end
$var wire 1 1 A $end
$upscope $end
$scope module u3_XOR $end
$var wire 1 ; A $end
$var wire 1 < B $end
$var wire 1 + Y $end
$upscope $end
$scope module u4_AND $end
$var wire 1 , Y $end
$var wire 1 5 B $end
$var wire 1 - A $end
$upscope $end
$scope module u4_XOR $end
$var wire 1 # A $end
$var wire 1 + B $end
$var wire 1 6 Y $end
$upscope $end
$scope module u5_AND $end
$var wire 1 = A $end
$var wire 1 > B $end
$var wire 1 ) Y $end
$upscope $end
$scope module u5_XOR $end
$var wire 1 ? A $end
$var wire 1 6 B $end
$var wire 1 4 Y $end
$upscope $end
$scope module u6_XOR $end
$var wire 1 @ A $end
$var wire 1 & B $end
$var wire 1 / Y $end
$upscope $end
$scope module u7_XOR $end
$var wire 1 3 A $end
$var wire 1 . B $end
$var wire 1 5 Y $end
$upscope $end
$scope module u8_XOR $end
$var wire 1 A A $end
$var wire 1 5 B $end
$var wire 1 1 Y $end
$upscope $end
$scope module u9_XOR $end
$var wire 1 B A $end
$var wire 1 & B $end
$var wire 1 - Y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
bx *
x)
bx (
bx '
1&
bx %
bx $
x#
0"
bx !
$end
#100
07
02
11
0,
05
14
0.
06
b0 !
b0 *
09
0#
03
1/
00
1-
0)
0+
08
0@
0>
0:
0B
0=
1<
1A
1;
1?
b1 %
b1 (
b1 $
b1 '
1"
#200
0"
#300
17
12
01
1,
15
04
1.
16
b11 !
b11 *
19
1#
1"
#400
0"
#500
b1 !
b1 *
07
02
11
0,
05
0.
06
1+
04
0;
0?
b0 $
b0 '
1"
#600
0"
#700
1"
#800
0"
#900
1"
#1000
